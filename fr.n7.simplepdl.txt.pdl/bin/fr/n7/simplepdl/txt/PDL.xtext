// automatically generated by Xtext
grammar fr.n7.simplepdl.txt.PDL with org.eclipse.xtext.common.Terminals

import "http://simplepdl" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Guidance returns Guidance:
	'Guidance'
	'{'
		'text' text=EString
		('elements' '(' elements+=[ProcessElement|EString] ( "," elements+=[ProcessElement|EString])* ')' )?
	'}';

ProcessElement returns ProcessElement:
	ProcessElement_Impl | WorkDefinition | WorkSequence | Guidance | Ressource | RessourceSupply;





ProcessElement_Impl returns ProcessElement:
	{ProcessElement}
	'ProcessElement'
	;

EString returns ecore::EString:
	STRING | ID;

WorkDefinition returns WorkDefinition:
	{WorkDefinition}
	'WorkDefinition'
	name=EString;

WorkSequence returns WorkSequence:
	'WorkSequence'
	'{'
		'linkType' linkType=WorkSequenceType
		'predecessor' predecessor=[WorkDefinition|EString]
		'successor' successor=[WorkDefinition|EString]
	'}';

Ressource returns Ressource:
	'Ressource'
	name=EString
	'{'
		'quantity' quantity=EInt
	'}';

RessourceSupply returns RessourceSupply:
	'RessourceSupply'
	'{'
		'quantityNeeded' quantityNeeded=EInt
		'successor' successor=[WorkDefinition|EString]
		'predecessor' predecessor=[Ressource|EString]
	'}';

enum WorkSequenceType returns WorkSequenceType:
				startToStart = 'startToStart' | finishToStart = 'finishToStart' | startToFinish = 'startToFinish' | finishToFinish = 'finishToFinish';

EInt returns ecore::EInt:
	'-'? INT;
